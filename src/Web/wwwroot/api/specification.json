{
  "x-generator": "NSwag v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "SudokuApp API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Boards": {
      "get": {
        "tags": [
          "Boards"
        ],
        "operationId": "GetBoard",
        "parameters": [
          {
            "name": "difficulty",
            "in": "query",
            "schema": {
              "default": 0,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Difficulty"
                }
              ]
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Boards/validate": {
      "post": {
        "tags": [
          "Boards"
        ],
        "operationId": "ValidateBoard",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateBoardQuery"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Boards/solve": {
      "post": {
        "tags": [
          "Boards"
        ],
        "operationId": "SolveBoard",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolveBoardCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SolveResultDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BoardDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "board": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "Difficulty": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Easy",
          "Medium",
          "Hard",
          "Random"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "ValidationResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "ValidateBoardQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "board": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "SolveResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "solution": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "SolveBoardCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "board": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}